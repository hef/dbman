name: Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: go-semantic-release/action@v1
        id: semantic
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          changelog-generator-opt: "emojis=true"
          allow-initial-development-versions: true
          update-file: charts/dbman/Chart.yaml

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.2.0
        with:
          cosign-release: 'v2.1.1'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=${{ steps.semantic.outputs.version }},enable=${{ steps.semantic.outputs.version != '' }}

      - name: Determine cargo profile mode
        id: cargo-profile
        run: |
          if ${{ steps.semantic.outputs.version != '' }}; then
            echo "cargo-profile=for-distribution" >> $GITHUB_OUTPUT
          else
            echo "cargo-profile=release" >> $GITHUB_OUTPUT
          fi
      
      - name: Build and push
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          build-args: |
            CARGO_PROFILE=${{ steps.cargo-profile.outputs.cargo-profile }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
    
      - name: create crds for helm chart
        run: |
          mkdir charts/dbman/crds
          cargo run --bin crdgen > charts/dbman/crds/crds.yaml
      
      - name: Push Helm chart to OCI compatible registry (Github)
        uses: bsord/helm-push@v4.2.0
        with:
          useOCIRegistry: true
          registry-url:  oci://ghcr.io/${{ github.repository }}
          username: ${{ github.repository }}
          access-token: ${{ secrets.GITHUB_TOKEN }}
          force: true
          chart-folder: charts/dbman

      